---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: no
  become: yes
  vars:
    docker_port: "{{ molecule_yml.provisioner.vars.docker_port }}"
    client_cert: /etc/ssl/certs/client.crt
    client_key: /etc/ssl/private/client.key
  tasks:

  # test package is installed
  - name: populate package facts
    package_facts:
      manager: "auto"
  - name: test docker-ce is installed
    assert:
      that: "'docker-ce' in ansible_facts.packages"

  # test service is running
  - name: populate service facts
    service_facts:
  - name: test docker service exists and is running
    assert:
      that:
        - "ansible_facts.services['docker.service'] is defined"
        - "ansible_facts.services['docker.service'].state == 'running'"

  # test port is open
  - name: "wait for port {{ docker_port }} being open"
    wait_for:
      host: localhost
      port: "{{ docker_port | int }}"
      timeout: 10
    register: port_open
    ignore_errors: yes
  - name: assert port is open
    assert:
      that: not port_open.failed

  # copy client certificate and key
  - name: copy client certificate
    copy:
      src: "{{ molecule_yml.provisioner.vars.client_cert }}"
      dest: "{{ client_cert }}"

  - name: copy client key
    copy:
      src: "{{ molecule_yml.provisioner.vars.client_key }}"
      dest: "{{ client_key }}"

  - name: request to docker secure endpoint
    uri:
      url: https://localhost:{{ docker_port }}/images/json
      client_cert: "{{ client_cert }}"
      client_key: "{{ client_key }}"
      validate_certs: no
    register: response

  - name: verify response code
    assert:
      that: "{{ response.status }} == 200"
